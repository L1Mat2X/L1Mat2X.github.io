<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on L1Mat2X&#39;Blog - 學無止儘</title>
    <link>https://blog.matrixs.site/tags/algorithm/</link>
    <description>Recent content in Algorithm on L1Mat2X&#39;Blog - 學無止儘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Sep 2022 09:52:51 +0800</lastBuildDate><atom:link href="https://blog.matrixs.site/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>點是否在多邊形内</title>
      <link>https://blog.matrixs.site/post/%E8%A8%88%E7%AE%97%E6%A9%9F%E5%9C%96%E5%BD%A2%E5%AD%B8/2022-09-01-%E9%BB%9E%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E9%82%8A%E5%BD%A2%E5%86%85/%E9%BB%9E%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E9%82%8A%E5%BD%A2%E5%86%85.html</link>
      <pubDate>Thu, 01 Sep 2022 09:52:51 +0800</pubDate>
      
      <guid>https://blog.matrixs.site/post/%E8%A8%88%E7%AE%97%E6%A9%9F%E5%9C%96%E5%BD%A2%E5%AD%B8/2022-09-01-%E9%BB%9E%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E9%82%8A%E5%BD%A2%E5%86%85/%E9%BB%9E%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E9%82%8A%E5%BD%A2%E5%86%85.html</guid>
      <description>&lt;p&gt;這是最近做項目過程中延申思考的一個問題——在平面上如何快速判斷點與任意多邊形的關係？上網查找一些相關資料，其中《Graphic GEM IV》中的論文《Point in Polygon Strategies》做了許多介紹與總結，特此記錄。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法系列 Meijster距離變換算法學習</title>
      <link>https://blog.matrixs.site/post/2021-05-15-%E5%9C%96%E5%83%8F%E8%99%95%E7%90%86-meijster%E8%B7%9D%E9%9B%A2%E8%AE%8A%E6%8F%9B/%E7%AE%97%E6%B3%95%E7%B3%BB%E5%88%97%20Meijster%E8%B7%9D%E9%9B%A2%E8%AE%8A%E6%8F%9B%E7%AE%97%E6%B3%95%E5%AD%B8%E7%BF%92.html</link>
      <pubDate>Thu, 20 May 2021 11:13:35 +0800</pubDate>
      
      <guid>https://blog.matrixs.site/post/2021-05-15-%E5%9C%96%E5%83%8F%E8%99%95%E7%90%86-meijster%E8%B7%9D%E9%9B%A2%E8%AE%8A%E6%8F%9B/%E7%AE%97%E6%B3%95%E7%B3%BB%E5%88%97%20Meijster%E8%B7%9D%E9%9B%A2%E8%AE%8A%E6%8F%9B%E7%AE%97%E6%B3%95%E5%AD%B8%E7%BF%92.html</guid>
      <description>論文《A General algorithm for computing distance transforms in linear time》閲讀筆記整理。 Introduction 距離變換本質是計算點到點的距離，如果在二維空間中，可以按如下方式描述。 假設$B$為尺寸為$</description>
    </item>
    
    <item>
      <title>算法系列 Timsort排序算法原理學習</title>
      <link>https://blog.matrixs.site/post/2021-04-27-%E5%9F%BA%E7%A4%8E%E7%AE%97%E6%B3%95-Timsort%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E7%B3%BB%E5%88%97%20Timsort%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86%E5%AD%B8%E7%BF%92.html</link>
      <pubDate>Tue, 27 Apr 2021 14:16:53 +0800</pubDate>
      
      <guid>https://blog.matrixs.site/post/2021-04-27-%E5%9F%BA%E7%A4%8E%E7%AE%97%E6%B3%95-Timsort%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E7%B3%BB%E5%88%97%20Timsort%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86%E5%AD%B8%E7%BF%92.html</guid>
      <description>&lt;p&gt;最近在實際應用中頻繁遇到快速排序算法(&lt;code&gt;qsort&lt;/code&gt;)最壞情況，其實際耗時遠超過想象。主要原因在於進行排序的數據并非完全無序的，因此借此機會瞭解了當下使用廣汎的排序算法&lt;code&gt;Timsort&lt;/code&gt;，特此記錄。本文不涉及具體代碼實現，但是會結合自己實現過程給出僞代碼，如有錯誤歡迎指正。&lt;/p&gt;
&lt;p&gt;本文會從原理出發給出各個部分實現僞代碼，最後再討論細節。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
